<%- include('../layouts/userheader') %>



<div class="hero-wrap hero-bread" >
    <div class="container">
      <div class="row no-gutters slider-text align-items-center justify-content-center">
        <div class="col-md-9 ftco-animate text-center">
            <p class="breadcrumbs"><span class="mr-2"><a href="/">Home</a></span></p>
          <h1 class="mb-0 bread"> My addres book</h1>
        </div>
      </div>
    </div>
  </div>


<!-- addressBook.ejs -->
<div class="container">
  <div class="row">
     
      <div class="col-md-3">
          <div class="list-group" style="width: 80%;">
              <a href="/userprofile" class="list-group-item list-group-item-action">
                  <i class="fas fa-user"></i> Account Details
              </a>
              <a href="/address-book" class="list-group-item list-group-item-action">
                  <i class="fas fa-address-card"></i> Delivery Addresses
              </a>
              <a href="/orders" class="list-group-item list-group-item-action">
                  <i class="fas fa-shopping-cart"></i> My Orders
              </a>
          </div>
          <a href="/logout">
              <button id="logoutBtn" class="btn btn-danger mt-4">
                  <i class="fas fa-sign-out-alt"></i> Logout
              </button>
          </a>
      </div>
<!-- addressBook.ejs -->
<div class="col-md-9">
  <!-- <a href="/add-new-address" class="btn btn-primary" >Add New Address</a> -->
  <a href="#" id="addNewAddressLink" class="btn btn-primary" style="margin-top: 10px; margin-bottom: 12px; " >Add a New Address</a> 

<% if (user && user.address && user.address.length > 0) { %>

    <div class="row" style="width: 100%; " >
      <% user.address.forEach((address, index) => { %>
        <div class="col-md-4 col-mb-3">
          <div class="card">
            <div class="card-body">
              <h5 class="card-title">
                <%= address.firstname %> <%= address.lastname %>
              </h5>
              <p class="card-text">
                <strong>Street Address:</strong> <%= address.house %><br>
                <strong>Town/City:</strong> <%= address.city %><br>
                <strong>State:</strong> <%= address.state %><br>
                <strong>Postcode/ZIP:</strong> <%= address.post %><br>
                <strong>District:</strong> <%= address.district %><br>
                <strong>Contact:</strong> <%= address.contact %>
              </p>
              <!-- Radio button for selecting the address -->
              <div class="form-check">
                <input
                  type="radio"
                  class="form-check-input"
                  name="selectedAddress"
                  id="address<%= index %>"
                  value="<%= address._id %>"
                  onclick="setDefaultAddress('<%= address._id %>')"
                  <% if (address.isDefault) { %>checked<% } %>
                >
                <label class="form-check-label" for="address<%= index %>">Select Address</label>
              </div>
              <!-- Buttons for editing and deleting the address -->
              <div class="btn-group" role="group">
                <button type="button" class="btn btn-secondary ml-2" data-toggle="modal" data-target="#editAddressModal<%= address._id %>">Edit</button>
                <button type="button" class="btn btn-danger ml-2" data-toggle="modal" data-target="#deleteAddressModal<%= index %>">Delete</button>
              </div>
            </div>
          </div>
        </div>


        <!-- Modal for "Add New Address" -->
        <div class="modal fade" id="addNewAddressModal" tabindex="-1" role="dialog" aria-labelledby="addNewAddressModalLabel" aria-hidden="true">
          <div class="modal-dialog modal-lg" role="document">
              <div class="modal-content">
                  <div class="modal-header">
                      <h5 class="modal-title" id="addNewAddressModalLabel">Add New Address</h5>
                      <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                          <span aria-hidden="true">&times;</span>
                      </button>
                  </div>
                  <div class="modal-body">
                      <!-- Your form fields for adding a new address -->
                      <form id="newAddressForm">
                          <div class="row">
                              <div class="col-md-6">
                                  <!-- First Name -->
                                  <div class="form-group">
                                      <label for="newFirstName">First Name</label>
                                      <input type="text" class="form-control" id="newFirstName" name="newFirstName" required>
                                      <!-- Add a span element for error message -->
                                      <span class="text-danger" id="firstNameError"></span>
                                  </div>
                              </div>
                              <div class="col-md-6">
                                  <!-- Last Name -->
                                  <div class="form-group">
                                      <label for="newLastName">Last Name</label>
                                      <input type="text" class="form-control" id="newLastName" name="newLastName" required>
                                      <!-- Add a span element for error message -->
                                      <span class="text-danger" id="lastNameError"></span>
                                  </div>
                              </div>
                          </div>
                          
                          <!-- Street Address -->
                          <div class="form-group">
                              <label for="newStreetAddress">Street Address</label>
                              <input type="text" class="form-control" id="newStreetAddress" name="newStreetAddress" placeholder="House number and street name" required>
                              <!-- Add a span element for error message -->
                              <span class="text-danger" id="streetAddressError"></span>
                          </div>
                          
                          <!-- State -->
                          <div class="row">
                              <div class="col-md-6">
                                  <div class="form-group">
                                      <label for="newState">State</label>
                                      <input type="text" class="form-control" id="newState" name="newState" placeholder="State" required>
                                      <!-- Add a span element for error message -->
                                      <span class="text-danger" id="stateError"></span>
                                  </div>
                              </div>
                              <div class="col-md-6">
                                  <div class="form-group">
                                      <label for="newTownCity">Town / City</label>
                                      <input type="text" class="form-control" id="newTownCity" name="newTownCity" placeholder="Town / City" required>
                                      <!-- Add a span element for error message -->
                                      <span class="text-danger" id="townCityError"></span>
                                  </div>
                              </div>
                          </div>
      
                          <div class="row">
                              <div class="col-md-6">
                                  <!-- Postcode/ZIP -->
                                  <div class="form-group">
                                      <label for = "newPostcodeZip">Postcode / ZIP *</label>
                                      <input type="text" class="form-control" id="newPostcodeZip" name="newPostcodeZip" placeholder="Postcode / ZIP" required>
                                      <!-- Add a span element for error message -->
                                      <span class="text-danger" id="postcodeZipError"></span>
                                  </div>
                              </div>
                              <div class="col-md-6">
                                  <!-- District -->
                                  <div class="form-group">
                                      <label for="newDistrict">District</label>
                                      <input type="text" class="form-control" id="newDistrict" name="newDistrict" placeholder="District" required>
                                      <!-- Add a span element for error message -->
                                      <span class="text-danger" id="districtError"></span>
                                  </div>
                              </div>
                          </div>
      
                          <!-- Phone -->
                          <div class="form-group">
                              <label for="newPhone">Phone</label>
                              <input type="text" class="form-control" id="newPhone" name="newPhone" placeholder="Phone" required>
                              <!-- Add a span element for error message -->
                              <span class="text-danger" id="phoneError"></span>
                          </div>
                      </form>
                  </div>
                  <div class="modal-footer">
                      <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                      <button type="button" class="btn btn-primary" id="saveNewAddressBtn" onclick="validateAndSaveAddress()">Save Address</button>
                  </div>
              </div>
          </div>
      </div>
      


    <!-- Edit Address Modal -->
<div class="modal fade" id="editAddressModal<%= address._id %>" tabindex="-1" role="dialog" aria-labelledby="editAddressModalLabel<%= index %>" aria-hidden="true">
  <div class="modal-dialog" role="document">
      <div class="modal-content">
          <div class="modal-header">
              <h5 class="modal-title" id="editAddressModalLabel<%= index %>">Edit Address</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
              </button>
          </div>
          <div class="modal-body">
              <!-- Add a form here for editing address fields -->
              <form action="/editaddress" method="POST" id="editAddressForm" onsubmit="return validateAndSaveEditAddress()">
              
                  <!-- Include input fields for editing address details -->
                  <input type="hidden" name="addressId" value="<%= address._id %>">
                  <div class="row">
                      <div class="col-md-6">
                          <div class="form-group">
                              <label for="editFirstname">First Name:</label>
                              <input type="text" id="editFirstname" name="editFirstname" class="form-control" value="<%= address.firstname %>"required>
                              <div class="text-danger" id="editFirstnameError"></div>
                          </div>
                      </div>
                      <div class="col-md-6">
                          <div class="form-group">
                              <label for="editLastname">Last Name:</label>
                              <input type="text" id="editLastname" name="editLastname" class="form-control" value="<%= address.lastname %>"required>
                              <div class="text-danger" id="editLastnameError"></div>
                          </div>
                      </div>
                  </div>
                  <div class="form-group">
                      <label for="editHouse">Street Address:</label>
                      <input type="text" id="editHouse" name="editHouse" class="form-control" value="<%= address.house %>"required>
                      <div class="text-danger" id="editHouseError"></div>
                  </div>
                  <div class="row">
                      <div class="col-md-6">
                          <div class="form-group">
                              <label for="editCity">Town/City:</label>
                              <input type="text" id="editCity" name="editCity" class="form-control" value="<%= address.city %>"required>
                              <div class="text-danger" id="editCityError"></div>
                          </div>
                      </div>
                      <div class="col-md-6">
                          <div class="form-group">
                              <label for="editState">State:</label>
                              <input type="text" id="editState" name="editState" class="form-control" value="<%= address.state %>"required>
                              <div class="text-danger" id="editStateError"></div>
                          </div>
                      </div>
                  </div>
                  <div class="form-group">
                      <label for="editPost">Postcode/ZIP:</label>
                      <input type="number" id="editPost" name="editPost" class="form-control" value="<%= address.post %>"required>
                      <div class="text-danger" id="editPostError"></div>
                  </div>
                  <div class="row">
                      <div class="col-md-6">
                          <div class="form-group">
                              <label for="editDistrict">District:</label>
                              <input type="text" id="editDistrict" name="editDistrict" class="form-control" value="<%= address.district %>"required>
                              <div class="text-danger" id="editDistrictError"></div>
                          </div>
                      </div>
                      <div class="col-md-6">
                          <div class="form-group">
                              <label for="editContact">Contact:</label>
                              <input type="number" id="editContact" name="editContact" class="form-control" value="<%= address.contact %>"required>
                              <div class="text-danger" id="editContactError"></div>
                          </div>
                      </div>
                  </div>
              </form>
          </div>
          <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
              <button type="submit" form="editAddressForm" class="btn btn-primary">Save Changes</button>
          </div>
      </div>
  </div>
</div>


         <!-- Delete Address Confirmation Modal -->
<div class="modal fade" id="deleteAddressModal<%= index %>" tabindex="-1" role="dialog" aria-labelledby="deleteAddressModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="deleteAddressModalLabel">Confirm Deletion</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          Are you sure you want to delete this address?
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
          <button type="button" class="btn btn-danger" onclick="performdeleteAddress('<%= address._id %>')">Delete</button>
        </div>
      </div>
    </div>
  </div>
    </div>
    </div>
    </div>


      <% }); %>
    </div>
  <% } else { %>
    <div class="alert alert-warning">
      You don't have any addresses in your address book.
    </div>
  <% } %>
  
  

 
  
  
<script>

function setDefaultAddress(addressId) {
    fetch(`/set-default-address/${addressId}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
    })
      .then((response) => {
        if (response.ok) {
          // Successfully set the address as default
          // You can provide some visual feedback to the user here
        } else {
          // Handle errors if needed
        }
      })
      .catch((error) => {
        console.error('Error:', error);
      });
  }


  function performdeleteAddress(addressId) {
  // Send an AJAX request to delete the address
  $.ajax({
    type: 'DELETE',
    url: `/delete-address/${addressId}`, // Replace with the actual address ID
    success: function () {
      // Address deleted successfully, update the UI (remove the address card, etc.)
      // You may need to refresh the address book or update it on the frontend.
      // Close the confirmation modal
      $('#deleteAddressModal').modal('hide');
    },
    error: function (error) {
      console.error('Error deleting address:', error);
    },
  });
}




  function showDeleteModal(addressId) {
  // Set the address ID in the hidden field
  $('#deleteAddressId').val(addressId);

  // Show the confirmation modal
  $('#deleteAddressModal').modal('show');
}


</script>

<!-- //////////////////////////////////////////// add new address ///////////////////////////////////////////////////// -->


<script>
  // Function to show the "Add New Address" modal
  function showAddNewAddressModal() {
      $('#addNewAddressModal').modal('show');
  }

  // Function to hide the "Add New Address" modal
  function hideAddNewAddressModal() {
      $('#addNewAddressModal').modal('hide');
  }

  // Add click event listener to the "Add a New Address" link
  document.getElementById('addNewAddressLink').addEventListener('click', showAddNewAddressModal);

  // Function to validate the form before saving
  function validateAndSaveAddress() {
      const form = document.getElementById('newAddressForm');
      const firstName = document.getElementById('newFirstName');
      const lastName = document.getElementById('newLastName');
      const streetAddress = document.getElementById('newStreetAddress');
      const state = document.getElementById('newState');
      const townCity = document.getElementById('newTownCity');
      const postcodeZip = document.getElementById('newPostcodeZip');
      const district = document.getElementById('newDistrict');
      const phone = document.getElementById('newPhone');
      
      // Reset error messages
      document.querySelectorAll('.text-danger').forEach(element => {
          element.textContent = '';
      });

      // Trim all field values
      firstName.value = firstName.value.trim();
      lastName.value = lastName.value.trim();
      streetAddress.value = streetAddress.value.trim();
      state.value = state.value.trim();
      townCity.value = townCity.value.trim();
      postcodeZip.value = postcodeZip.value.trim();
      district.value = district.value.trim();
      phone.value = phone.value.trim();

      if (form.checkValidity()) {
          // If the form is valid, save the address
          saveNewAddress();
      } else {
          // If the form is not valid, show validation feedback
          form.classList.add('was-validated');

          // Show specific error messages
          if (!firstName.checkValidity()) {
              document.getElementById('firstNameError').textContent = 'Please enter a valid first name.';
          }
          if (!lastName.checkValidity()) {
              document.getElementById('lastNameError').textContent = 'Please enter a valid last name.';
          }
          if (!streetAddress.checkValidity()) {
              document.getElementById('streetAddressError').textContent = 'Please enter a valid street address.';
          }
          if (!state.checkValidity()) {
              document.getElementById('stateError').textContent = 'Please enter a valid state.';
          }
          if (!townCity.checkValidity()) {
              document.getElementById('townCityError').textContent = 'Please enter a valid town or city.';
          }
          if (!postcodeZip.checkValidity()) {
              document.getElementById('postcodeZipError').textContent = 'Please enter a valid postcode or ZIP.';
          }
          if (!district.checkValidity()) {
              document.getElementById('districtError').textContent = 'Please enter a valid district.';
          }
          if (!phone.checkValidity()) {
              document.getElementById('phoneError').textContent = 'Please enter a valid phone number.';
          }
      }
  }

  // Function to handle form submission for adding a new address
  function saveNewAddress() {
      // Extract form data
      const newAddressData = {
          newFirstName: document.getElementById('newFirstName').value,
          newLastName: document.getElementById('newLastName').value,
          newStreetAddress: document.getElementById('newStreetAddress').value,
          newPostcodeZip: document.getElementById('newPostcodeZip').value,
          newTownCity: document.getElementById('newTownCity').value,
          newState: document.getElementById('newState').value,
          newDistrict: document.getElementById('newDistrict').value,
          newPhone: document.getElementById('newPhone').value
      };

      // Send the data to the server using fetch
      fetch('/add-address', {
          method: 'POST',
          headers: {
              'Content-Type': 'application/json'
          },
          body: JSON.stringify(newAddressData)
      })
      .then(response => response.json())
      .then(data => {
          // Handle the response from the server
          if (data.success) {
              // Address added successfully, you can perform additional actions if needed
              console.log('Address added successfully');

              // Hide the modal after successful submission
              hideAddNewAddressModal();
          } else {
              // Handle errors or display error messages to the user
              console.error('Error adding address:', data.message);
          }
      })
      .catch(error => {
          console.error('An error occurred:', error);
      });
  }
</script>


<script>
    function validateAndSaveEditAddress() {
        const editFirstname = document.getElementById('editFirstname');
        const editLastname = document.getElementById('editLastname');
        const editHouse = document.getElementById('editHouse');
        const editCity = document.getElementById('editCity');
        const editState = document.getElementById('editState');
        const editPost = document.getElementById('editPost');
        const editDistrict = document.getElementById('editDistrict');
        const editContact = document.getElementById('editContact');

        // Reset error messages
        document.querySelectorAll('.text-danger').forEach(element => {
            element.textContent = '';
        });

        // Trim all field values
        editFirstname.value = editFirstname.value.trim();
        editLastname.value = editLastname.value.trim();
        editHouse.value = editHouse.value.trim();
        editCity.value = editCity.value.trim();
        editState.value = editState.value.trim();
        editPost.value = editPost.value.trim();
        editDistrict.value = editDistrict.value.trim();
        editContact.value = editContact.value.trim();

        if (editAddressForm.checkValidity()) {
            // If the form is valid, save the address
            saveEditAddress();
        } else {
            // If the form is not valid, show validation feedback
            editAddressForm.classList.add('was-validated');

            // Show specific error messages
            if (!editFirstname.checkValidity()) {
                document.getElementById('editFirstnameError').textContent = 'Please enter a valid first name.';
            }
            if (!editLastname.checkValidity()) {
                document.getElementById('editLastnameError').textContent = 'Please enter a valid last name.';
            }
            if (!editHouse.checkValidity()) {
                document.getElementById('editHouseError').textContent = 'Please enter a valid street address.';
            }
            if (!editCity.checkValidity()) {
                document.getElementById('editCityError').textContent = 'Please enter a valid town or city.';
            }
            if (!editState.checkValidity()) {
                document.getElementById('editStateError').textContent = 'Please enter a valid state.';
            }
            if (!editPost.checkValidity()) {
                document.getElementById('editPostError').textContent = 'Please enter a valid postcode or ZIP.';
            }
            if (!editDistrict.checkValidity()) {
                document.getElementById('editDistrictError').textContent = 'Please enter a valid district.';
            }
            if (!editContact.checkValidity()) {
                document.getElementById('editContactError').textContent = 'Please enter a valid phone number.';
            }

            // Prevent form submission
            return false;
        }
    }

    function saveEditAddress() {
        // Implement the logic to save the edited address
        // This function will be called when the form is valid
        console.log('Saving edited address...');
        // You can use fetch or any other method to send the data to the server
    }
</script>


















<%- include('../layouts/userfooter') %>